import{_ as s,c as a,o as e,N as n}from"./chunks/framework.8df7b5f9.js";const g=JSON.parse('{"title":"UAParser Class Overview","description":"","frontmatter":{},"headers":[],"relativePath":"api/ua-parser-js/overview.md","lastUpdated":1681218274000}'),t={name:"api/ua-parser-js/overview.md"},r=n(`<h1 id="uaparser-class-overview" tabindex="-1">UAParser Class Overview <a class="header-anchor" href="#uaparser-class-overview" aria-label="Permalink to &quot;UAParser Class Overview&quot;">​</a></h1><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><h3 id="new-uaparser-user-agent-string-extensions-object-headers-object-uaparser" tabindex="-1"><code>new UAParser([user-agent:string][,extensions:object][,headers:object]):UAParser</code> <a class="header-anchor" href="#new-uaparser-user-agent-string-extensions-object-headers-object-uaparser" aria-label="Permalink to &quot;\`new UAParser([user-agent:string][,extensions:object][,headers:object]):UAParser\`&quot;">​</a></h3><p>When called with the <code>new</code> keyword, it will return a new instance of <code>UAParser</code>.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> parser </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">UAParser</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">your user-agent here</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// you need to pass the user-agent for nodejs</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(parser)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    {}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> parserResults </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> parser</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getResult</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(parserResults)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        ua      : &quot;&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        browser : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        engine  : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        os      : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        device  : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        cpu     : {}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="uaparser-user-agent-string-extensions-object-headers-object-idata" tabindex="-1"><code>UAParser([user-agent:string][,extensions:object][,headers:object]):IData</code> <a class="header-anchor" href="#uaparser-user-agent-string-extensions-object-headers-object-idata" aria-label="Permalink to &quot;\`UAParser([user-agent:string][,extensions:object][,headers:object]):IData\`&quot;">​</a></h3><p>When called without the <code>new</code> keyword, it will directly return the results of <code>getResult()</code>:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> parser </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">UAParser</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">your user-agent here</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(parser)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        ua      : &quot;&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        browser : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        engine  : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        os      : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        device  : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        cpu     : {}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>In <strong>browser</strong> environment you don&#39;t need to pass the user-agent string, as it should automatically get the string from the current <code>window.navigator.userAgent</code>.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>In <strong>Node.js</strong> environment, user-agent string must be passed in order for the function to work. Usually you can find it in: <code>request.headers[&quot;user-agent&quot;]</code>.</p></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p>The methods are self explanatory, here&#39;s a small overview of available methods:</p><h3 id="getbrowser-idata" tabindex="-1"><a href="/ua-parser-js-docs/v2/api/ua-parser-js/get-browser.html"><code>getBrowser():IData</code></a> <a class="header-anchor" href="#getbrowser-idata" aria-label="Permalink to &quot;[\`getBrowser():IData\`](/api/ua-parser-js/get-browser)&quot;">​</a></h3><p>returns the browser name, version, and major.</p><h3 id="getcpu-idata" tabindex="-1"><a href="/ua-parser-js-docs/v2/api/ua-parser-js/get-cpu.html"><code>getCPU():IData</code></a> <a class="header-anchor" href="#getcpu-idata" aria-label="Permalink to &quot;[\`getCPU():IData\`](/api/ua-parser-js/get-cpu)&quot;">​</a></h3><p>returns CPU architectural design name.</p><h3 id="getdevice-idata" tabindex="-1"><a href="/ua-parser-js-docs/v2/api/ua-parser-js/get-device.html"><code>getDevice():IData</code></a> <a class="header-anchor" href="#getdevice-idata" aria-label="Permalink to &quot;[\`getDevice():IData\`](/api/ua-parser-js/get-device)&quot;">​</a></h3><p>returns the device model, type, vendor.</p><h3 id="getengine-idata" tabindex="-1"><a href="/ua-parser-js-docs/v2/api/ua-parser-js/get-engine.html"><code>getEngine():IData</code></a> <a class="header-anchor" href="#getengine-idata" aria-label="Permalink to &quot;[\`getEngine():IData\`](/api/ua-parser-js/get-engine)&quot;">​</a></h3><p>returns the browser engine name and version.</p><h3 id="getos-idata" tabindex="-1"><a href="/ua-parser-js-docs/v2/api/ua-parser-js/get-os.html"><code>getOS():IData</code></a> <a class="header-anchor" href="#getos-idata" aria-label="Permalink to &quot;[\`getOS():IData\`](/api/ua-parser-js/get-os)&quot;">​</a></h3><p>returns the operating system name and version.</p><h3 id="getresult-idata" tabindex="-1"><a href="/ua-parser-js-docs/v2/api/ua-parser-js/get-result.html"><code>getResult():IData</code></a> <a class="header-anchor" href="#getresult-idata" aria-label="Permalink to &quot;[\`getResult():IData\`](/api/ua-parser-js/get-result)&quot;">​</a></h3><p>returns all function object calls, user-agent string, browser info, cpu, device, engine, os.</p><h3 id="getua-string" tabindex="-1"><a href="/ua-parser-js-docs/v2/api/ua-parser-js/get-ua.html"><code>getUA():string</code></a> <a class="header-anchor" href="#getua-string" aria-label="Permalink to &quot;[\`getUA():string\`](/api/ua-parser-js/get-ua)&quot;">​</a></h3><p>returns the user-agent string.</p><h3 id="setua-ua-string-uaparser" tabindex="-1"><a href="/ua-parser-js-docs/v2/api/ua-parser-js/set-ua.html"><code>setUA(ua:string):UAParser</code></a> <a class="header-anchor" href="#setua-ua-string-uaparser" aria-label="Permalink to &quot;[\`setUA(ua:string):UAParser\`](/api/ua-parser-js/set-ua)&quot;">​</a></h3><p>set a custom user-agent string to be parsed.</p>`,28),l=[r];function o(p,c,i,u,d,h){return e(),a("div",null,l)}const y=s(t,[["render",o]]);export{g as __pageData,y as default};
