import{_ as s,c as a,o as e,N as n}from"./chunks/framework.2ea5d489.js";const h=JSON.parse('{"title":"getCPU(): ICPU","description":"","frontmatter":{},"headers":[],"relativePath":"api/ua-parser-js/get-cpu.md","lastUpdated":1719115561000}'),l={name:"api/ua-parser-js/get-cpu.md"},p=n(`<h1 id="getcpu-icpu" tabindex="-1"><code>getCPU(): ICPU</code> <a class="header-anchor" href="#getcpu-icpu" aria-label="Permalink to &quot;\`getCPU(): ICPU\`&quot;">​</a></h1><p>Get type of CPU architecture from user-agent string.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Result object is structured as follow:</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">architecture</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="architecture-string" tabindex="-1"><code>architecture?: string</code> <a class="header-anchor" href="#architecture-string" aria-label="Permalink to &quot;\`architecture?: string\`&quot;">​</a></h2><ul><li><a href="/list/cpu/arch.html">List of possible <code>cpu.architecture</code></a></li></ul><h2 id="code-example" tabindex="-1">Code Example <a class="header-anchor" href="#code-example" aria-label="Permalink to &quot;Code Example&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> powerpc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Mozilla/4.0 (compatible; MSIE 5.17; Mac_PowerPC Mac OS; en)</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> parser </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">UAParser</span><span style="color:#A6ACCD;">(powerpc)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(parser</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getCPU</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// { architecture : &quot;ppc&quot; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,7),t=[p];function o(r,c,i,u,d,y){return e(),a("div",null,t)}const D=s(l,[["render",o]]);export{h as __pageData,D as default};
