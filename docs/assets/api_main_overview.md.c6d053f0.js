import{_ as s,c as n,o as e,N as a}from"./chunks/framework.2ea5d489.js";const m=JSON.parse('{"title":"UAParser Class Overview","description":"","frontmatter":{},"headers":[],"relativePath":"api/main/overview.md","lastUpdated":1728740851000}'),l={name:"api/main/overview.md"},r=a(`<h1 id="uaparser-class-overview" tabindex="-1">UAParser Class Overview <a class="header-anchor" href="#uaparser-class-overview" aria-label="Permalink to &quot;UAParser Class Overview&quot;">​</a></h1><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><h3 id="new-uaparser-uastring-string-extensions-record-string-regexmap-headers-record-string-string-uaparser" tabindex="-1"><code>new UAParser(uastring?: string, extensions?: Record&lt;string, RegexMap&gt;, headers?: Record&lt;string, string&gt;): UAParser</code> <a class="header-anchor" href="#new-uaparser-uastring-string-extensions-record-string-regexmap-headers-record-string-string-uaparser" aria-label="Permalink to &quot;\`new UAParser(uastring?: string, extensions?: Record&lt;string, RegexMap&gt;, headers?: Record&lt;string, string&gt;): UAParser\`&quot;">​</a></h3><p>When called with the <code>new</code> keyword, it will return a new instance of <code>UAParser</code>.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> parser </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">UAParser</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">your user-agent here</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// you need to pass the user-agent for nodejs</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(parser)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    {}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> parserResults </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> parser</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getResult</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(parserResults)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        ua      : &quot;&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        browser : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        engine  : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        os      : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        device  : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        cpu     : {}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="uaparser-uastring-string-extensions-record-string-regexmap-headers-record-string-string-iresult" tabindex="-1"><code>UAParser(uastring?: string, extensions?: Record&lt;string, RegexMap&gt;, headers?: Record&lt;string, string&gt;): IResult</code> <a class="header-anchor" href="#uaparser-uastring-string-extensions-record-string-regexmap-headers-record-string-string-iresult" aria-label="Permalink to &quot;\`UAParser(uastring?: string, extensions?: Record&lt;string, RegexMap&gt;, headers?: Record&lt;string, string&gt;): IResult\`&quot;">​</a></h3><p>When called without the <code>new</code> keyword, it will directly return the results of <code>getResult()</code>:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> parser </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">UAParser</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">your user-agent here</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(parser)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        ua      : &quot;&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        browser : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        engine  : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        os      : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        device  : {},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        cpu     : {}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>In <strong>browser</strong> environment you don&#39;t need to pass the user-agent string, as it should automatically get the string from the current <code>window.navigator.userAgent</code>.</p><p>Whereas in <strong>Node.js</strong> environment, user-agent string must be supplied, usually you can find it in: <code>request.headers[&quot;user-agent&quot;]</code>.</p></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p>The methods are self explanatory, here&#39;s a small overview of available methods:</p><ul><li><a href="/api/main/get-browser.html"><code>getBrowser(): IBrowser</code></a></li></ul><p>returns the browser name, version, and major.</p><ul><li><a href="/api/main/get-cpu.html"><code>getCPU(): ICPU</code></a></li></ul><p>returns CPU architectural design name.</p><ul><li><a href="/api/main/get-device.html"><code>getDevice(): IDevice</code></a></li></ul><p>returns the device model, type, vendor.</p><ul><li><a href="/api/main/get-engine.html"><code>getEngine(): IEngine</code></a></li></ul><p>returns the browser engine name and version.</p><ul><li><a href="/api/main/get-os.html"><code>getOS(): IOS</code></a></li></ul><p>returns the operating system name and version.</p><ul><li><a href="/api/main/get-result.html"><code>getResult(): IResult</code></a></li></ul><p>returns all function object calls, user-agent string, browser info, cpu, device, engine, os.</p><ul><li><a href="/api/main/get-ua.html"><code>getUA(): string</code></a></li></ul><p>returns the user-agent string.</p><ul><li><a href="/api/main/set-ua.html"><code>setUA(ua: string): UAParser</code></a></li></ul><p>set a custom user-agent string to be parsed.</p>`,27),t=[r];function o(p,i,c,u,d,g){return e(),n("div",null,t)}const h=s(l,[["render",o]]);export{m as __pageData,h as default};
